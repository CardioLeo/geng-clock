#
#
#
#

# from Notecards


##########


1.

Do I need a data structure?

Could be done both ways:

Functional:

24h Timer

Geng = 2.4h

h=60m
m=60s
s=sleep 1

[chron? look into 1 sec for var, different already existing functions]

Do I make it a timer or convert 24 present time into Geng?


##########


2.

Geng Clock

Primary Data:

1 Geng

1 Geng = 2.4hours
24h=10g
1/2g=1.2h
1/4g=0.6h=36m
=0.6h=(6/10=3/5)
[60/5=12]
[1/5h=12m]
[3/5h=12mx3=36m]

# Equivalences

1/4g=36m=2160s
1/2g=72m=4320s
1g=2.4h=144m=8640s

60(s)x60(m)x24(h)
= 86,400

24x60=1440 = minutes in a day

1440m=24h
86,400s=24h


##########


3.

1st, Timer

geng-start.sh
# Author
# Date x2
# Description
# Usage:

while i > 86,400
wait 1 sec
echo i
i++


##########


4.

geng-start.sh

# ~~~~~~~~~comments, pseudocode

while user says go; do:
while i<86,400:
count 1 second;
i++
restart loop
if go=false
stop loop

----------

while timer = true
  while i<86,400:
    i++;
  if i=seconds totaling 1/2g
    print "it's 1/2g!"

# find out how to make it division


##########


5.

geng-start.sh

while timer = true;
  while i<86400:
    sleep 1s;
    i++;
  if i=second totalling 1/2g
    print "it's 1/2g!"

variables:

geng = 8640s
geng-q=geng/4
geng-h=geng/2

geng-quarter = 2160s

# 1/4 geng is 36m & 2160s

geng-half = 4320s

# 1/2 geng is 72 minutes & 4320s


##########


6.

Declare variables

bool gengTimer=true;
geng-in-day-seconds
geng-half
geng-quarter
day-in-geng
half-day-in-geng

when the counter = variables & multiples of them, print associated statement

while gt=true


##########

# End
